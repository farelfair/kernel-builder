name: Compile

on:
  workflow_dispatch:
    inputs:
      KERNEL_URL:
        description: 'KERNEL_URL'
        required: true
      KERNEL_BRANCH:
        description: 'KERNEL_BRANCH'
        required: true
      CLANG_URL:
        description: 'CLANG_VERSION'
        required: true
        default: https://gitlab.com/mcdofrenchfreis/android-clang-14.0.7.git
      CLANG_BRANCH:
        description: 'CLANG_BRANCH'
        required: true
      DEVICE:
        description: 'DEVICE NAME (e.g. fleur)'
        required: true
      DEFCONFIG:
        description: 'KERNEL_DEFCONFIG'
        required: true
        default: fleur_defconfig

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "KERNEL url: ${{ github.event.inputs.KERNEL_URL }}"
        echo "KERNEL branch: ${{ github.event.inputs.KERNEL_BRANCH }}"
        echo "clang url: ${{ github.event.inputs.CLANG_URL }}"
        echo "clang branch: ${{ github.event.inputs.ClANG_BRANCH }}"
        echo "device name: ${{ github.event.inputs.DEVICE }}"
        echo "defconfig: ${{ github.event.inputs.DEFCONFIG }}"
        echo "::endgroup::"

     # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v4

    - name: Prepare the environment
      run: |
        sudo apt update -y
        sudo apt install -y \
          bc bison build-essential ca-certificates clang curl cpio \
          flex gcc gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi \
          git libarchive-tools libc6-dev libelf-dev libffi-dev \
          libncurses5-dev libreadline-dev libsqlite3-dev libssl-dev \
          lld llvm make nano neofetch openssl pigz python2 python3 \
          software-properties-common ssh sudo wget zip zlib1g \
          zlib1g-dev

    - name: Clone Clang
      run: |
        git clone -b "${{ inputs.CLANG_BRANCH }}" "${{ inputs.CLANG_URL }}" toolchain

    - name: Clone AnyKernel3
      run: |
        git clone https://github.com/farelfair/AnyKernel3.git AnyKernel3

    - name: Clone Kernel
      run: |
        git clone -b "${{ inputs.KERNEL_BRANCH }}" "${{ inputs.KERNEL_URL }}" kernel

    - name: Compile Kernel
      run: |
        cd kernel

        export PATH=$(pwd)/../toolchain/bin:$PATH
        export CROSS_COMPILE=$(pwd)/../toolchain/bin/aarch64-linux-gnu-
        export CC=$(pwd)/../toolchain/bin/clang
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export ARCH=arm64
        export ANDROID_MAJOR_VERSION=r

        make -C $(pwd) O=$(pwd)/out KCFLAGS=-w CONFIG_SECTION_MISMATCH_WARN_ONLY=y LLVM=1 LLVM_IAS=1 ${{ github.event.inputs.DEFCONFIG }}
        make -C $(pwd) O=$(pwd)/out KCFLAGS=-w CONFIG_SECTION_MISMATCH_WARN_ONLY=y LLVM=1 LLVM_IAS=1 -j$(nproc)

    - name: Package Image
      run: |
        DATE=$(date +%Y-%m-%d)
        ZIPNAME="${{ inputs.DEVICE }}-${{ inputs.RELEASE }}-${DATE}.zip"

        cp $(pwd)/kernel/out/arch/arm64/boot/Image $(pwd)/AnyKernel3/
        cd AnyKernel3
        zip -r9 "../$ZIPNAME" *

    - name: Create GitHub Release and Upload ZIP
      uses: softprops/action-gh-release@v2
      with:
        name: "Release ${{ inputs.RELEASE }}"
        tag_name: "${{ inputs.RELEASE }}"
        body: |
          üîß Device: `${{ inputs.DEVICE }}`
          üìÖ Build Date: $(date +%Y-%m-%d)
          üõ†Ô∏è Defconfig: `${{ inputs.DEFCONFIG }}`

        files: ${{ env.ZIPNAME }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
